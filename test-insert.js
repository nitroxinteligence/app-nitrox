const { createClient } = require("@supabase/supabase-js"); const SUPABASE_URL = "https://dkvqjisxtdlrdgseiooq.supabase.co"; const SUPABASE_SERVICE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRrdnFqaXN4dGRscmRnc2Vpb29xIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczNzg2MDY5NSwiZXhwIjoyMDUzNDM2Njk1fQ.kFV65mUt9ljbP9sFaaKQ7JlzL5aiEf-ZOsgdmOk1Lqo"; async function testInsert() { console.log("Testing Supabase insert"); const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY); const testRecord = { workflow_id: "test-workflow", workflow_name: "Test Workflow", workflow_tags: ["test", "agent"], execution_id: "test-execution", start_time: new Date().toISOString(), end_time: new Date().toISOString(), node_name: "Test Node", model: "gpt-3.5-turbo", tokens_prompt: 10, tokens_completion: 20, tokens_total: 30, cost_usd: 0.0001, node_type: "test-node", node_id: "test-node-id", created_at: new Date().toISOString(), request_id: `test-${Date.now()}` }; try { const { data, error } = await supabase.from("openai_usage").insert([testRecord]); if (error) { console.error("Error inserting record:", error); } else { console.log("Record inserted successfully!"); } } catch (e) { console.error("Exception:", e); } } testInsert().catch(console.error);
